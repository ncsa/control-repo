---
lookup_options:
  openafs::server_common::files:
    merge:
      strategy: "deep"
      merge_hash_arrays: true
  profile_monitoring::telegraf::inputs_extra:
    merge:
      strategy: "deep"
      merge_hash_arrays: true
  profile_monitoring::telegraf::input_extra_scripts:
    merge:
      strategy: "deep"
      merge_hash_arrays: true
  profile_monitoring::telegraf::outputs:
    merge:
      strategy: "deep"
      merge_hash_arrays: true

# THE %{lookup()}'S BELOW ALLOW THESE TO BE PULLED IN FROM EYAML SECRETS
anchors:
  - &telegraf_outputs_influxdb_common
    database: "%{lookup('influxdb_database')}"  ## LOOKUP FROM EYAML
    password: "%{lookup('influxdb_password')}"  ## LOOKUP FROM EYAML
    username: "%{lookup('influxdb_username')}"  ## LOOKUP FROM EYAML
    insecure_skip_verify: false
    skip_database_creation: true

apache::default_mods: false
apache::default_vhost: false
apache::default_ssl_vhost: false
apache::default_ssl_cert: "/etc/letsencrypt/live/%{facts.fqdn}/fullchain.pem"
apache::default_ssl_key: "/etc/letsencrypt/live/%{facts.fqdn}/privkey.pem"
apache::access_log: "|/usr/bin/logger -t httpd -p local6.info"
apache::access_log_file: "|/usr/bin/logger -t httpd -p local6.info"
apache::error_log: "syslog:local6"
apache::error_log_file: "syslog:local6"
#apache::auth_oidc: true
apache::mod::proxy: {}
apache::mod::ssl:
  ssl_cipher: "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
  ssl_compression: false
  ssl_honorcipherorder: true
  ssl_protocol:
    - "all"
    - "-SSLv2"
    - "-SSLv3"
    - "-TLSv1"
    - "-TLSv1.1"
  ssl_stapling: true
  stapling_cache: "shmcb:logs/stapling-cache(150000)"
apache::mpm_module: "prefork"
apache::serveradmin: "web@ncsa.illinois.edu"
apache::server_tokens: "Prod"
apache::server_signature: "Off"
apache::trace_enable: "Off"

apache::vhost:
  "%{facts.fqdn}-ssl":
    servername: "%{facts.fqdn}"
    serveraliases:
      - "%{facts.fqdn}"
    access_log_pipe: "|/bin/sh -c
      '/usr/bin/tee
      -a /var/log/httpd/%{facts.fqdn}-ssl_access_ssl.log'
      |/bin/sh -c '/usr/bin/logger -t httpd -p local6.notice'"
    docroot: "/var/www/html"
    error_log_pipe: "|/bin/sh -c
      '/usr/bin/tee
      -a /var/log/httpd/%{facts.fqdn}-ssl_error_ssl.log'
      |/bin/sh -c '/usr/bin/logger -t httpd -p local6.err'"
    log_level: "warn"
    port: 443
    setenv:
      - "TZ America/Chicago"
    ssl: true
    headers:
      - "always set Strict-Transport-Security \"max-age=31536000\""
      # - "set X-Frame-Options \"deny\""
      - "set Content-Security-Policy \"default-src 'self' 'unsafe-inline' 'unsafe-eval' data:;\""
      - "set X-Content-Type-Options nosniff"
    rewrites:
      - comment: "rewrite all urls to use SSL with default hostname"
        rewrite_cond: "%%{}{HTTPS} off"
        rewrite_rule: "(.*)  https://%%{}{SERVER_NAME}/$1 [R,L]"
  "%{facts.fqdn}-nossl":
    servername: "%{facts.fqdn}"
    serveraliases:
      - "%{facts.fqdn}"
    access_log_pipe: "|/bin/sh -c
      '/usr/bin/tee
      -a /var/log/httpd/%{facts.fqdn}-nossl_access.log'
      |/bin/sh -c '/usr/bin/logger -t httpd -p local6.notice'"
    docroot: "/var/www/html"
    error_log_pipe: "|/bin/sh -c
      '/usr/bin/tee
      -a /var/log/httpd/%{facts.fqdn}-nossl_error.log'
      |/bin/sh -c '/usr/bin/logger -t httpd -p local6.err'"
    port: 80
    setenv:
      - "TZ America/Chicago"
    headers:
      - "always set Strict-Transport-Security \"max-age=31536000\""
      # - "set X-Frame-Options \"deny\""
      - "set Content-Security-Policy \"default-src 'self' 'unsafe-inline' 'unsafe-eval' data:;\""
      - "set X-Content-Type-Options nosniff"
    rewrites:
      - comment: "rewrite all urls to use SSL with default hostname"
        rewrite_cond: "%%{}{HTTPS} off"
        rewrite_rule: "(.*)  https://%%{}{SERVER_NAME}/$1 [R,L]"

# disable user namespaces (needed for containers) by default
augeasproviders::instances::sysctl_hash:
  user.max_user_namespaces:
    target: "/etc/sysctl.d/60-ncsa-default.conf"
    value: 0

letsencrypt::email: "web@ncsa.illinois.edu"
letsencrypt::renew_cron_ensure: "present"
letsencrypt::renew_cron_minute: 0
letsencrypt::renew_cron_hour: 6
letsencrypt::renew_cron_monthday: "*/7"

message: "This node is using common data"

openafs::cellalias: |
  ncsa.uiuc.edu ncsa
openafs::server_common::cellservdb: |
  >ncsa.uiuc.edu          #National Center for Supercomputing Applications at Illinois
  141.142.192.66                  #nile-vm.ncsa.uiuc.edu
  141.142.192.143                 #congo-vm.ncsa.uiuc.edu
  141.142.192.144                 #kaskaskia-vm.ncsa.uiuc.edu
openafs::thiscell: "ncsa.uiuc.edu"
openafs::yumrepo::yumrepo:
  openafs:
    descr: "openafs"
    ensure: "present"
    enabled: true
    baseurl: "https://its-repo.ncsa.illinois.edu/openafs/jsbillings/centos-$releasever-$basearch/latest/"
    skip_if_unavailable: true
    gpgcheck: true
    gpgkey: "https://its-repo.ncsa.illinois.edu/openafs/jsbillings/centos-$releasever-$basearch/pubkey.gpg"
    repo_gpgcheck: false

pam_access::manage_pam: true

profile_allow_ssh_from_bastion::bastion_nodelist:
  - "141.142.148.5"
  - "141.142.236.22"
  - "141.142.236.23"
  - "141.142.148.24"
profile_allow_ssh_from_bastion::groups:
  - "org_asd"
  - "org_irst"

profile_audit::qualys::enabled: true
# ENABLE FOLLOWING IF ANY HOSTS WILL RUN RHEL EUS VERSIONS
profile_audit::qualys::escalated_scans: true
# ENABLE FOLLOWING IF USING RHEL EUS BUT RHSM SET TO NOT MANAGE REPOS
# e.g. USING MIRRORED RHEL REPOS
#profile_audit::qualys_eus_reporting::enabled: true

profile_monitoring::telegraf::enabled: true
profile_monitoring::telegraf::outputs:
  influxdb:
    npcf-influxdb-collector:
      <<: *telegraf_outputs_influxdb_common
      urls:
        - "https://npcf-influxdb.ncsa.illinois.edu:8086"
    ncsa-influxdb-collector:
      <<: *telegraf_outputs_influxdb_common
      urls:
        - "https://ncsa-influxdb.ncsa.illinois.edu:8086"

profile_motd::next_maintenance:
  - "none"
  - "none"
  #- "2024-12-10T06:00:00"
  #- "2024-12-10T10:00:00"
profile_motd::notice: |-2
         _  _   __   __    _
        | \| | / _| / _|  / \
        | \\ |( (_  \_ \ | o |
        |_|\_| \__| |__/ |_n_|
    Configured by https://github.com/ncsa/control-repo

profile_pam_access::allow_rules:
  "Allow telegraf for inventory script":
    group: "telegraf"
    origin: "LOCAL"

profile_sudo::configs:
  common_disabled_users:
    priority: 1
    content:
      - "#deny former NCSA users"
      - "%all_disabled_usr ALL=(ALL) !ALL"
  telegraf:
    content:
      - "#Allow telegraf to collect HW inventory data"
      - "Defaults:telegraf !requiretty"
      - "telegraf ALL = NOPASSWD: /usr/sbin/dmidecode"
      - "telegraf ALL = NOPASSWD: /usr/bin/cat /sys/devices/virtual/dmi/id/product_uuid"
profile_sudo::groups:
  org_asd: "ALL=(ALL) NOPASSWD: ALL"
  org_irst: "ALL=(ALL) NOPASSWD: ALL"

profile_system_auth::config::enable_mkhomedir: true

profile_update_os::kernel_upgrade::enabled: true

profile_update_os::yum_upgrade::enabled: true

profile_xcat::master_node_ip: "172.28.18.18"

sssd::debug_level: 0
sssd::domains:
  ncsa.illinois.edu:
    access_provider: "simple"
    # NCSA RECOMMENDS USING: auth_provider: "krb5"
    # BUT THAT ONLY WORKS IF YOU ARE CREATING KERBEROS HOSTKEYS
    # auth_provider CAN BE SET TO ldap IN control-repo TEMPLATE TO NOT PUBLISH SECRETS
    #auth_provider: "ldap"
    auth_provider: "krb5"
    cache_credentials: false
    chpass_provider: "krb5"
    debug_level: 0
    enumerate: false
    id_provider: "ldap"
    krb5_auth_timeout: 3
    krb5_lifetime: "25h"
    krb5_realm: "NCSA.EDU"
    krb5_renew_interval: 3600
    krb5_renewable_lifetime: "7d"
    krb5_use_kdcinfo: false
    krb5_validate: true
    ldap_backup_uri:
      - "ldaps://ldap3.ncsa.illinois.edu"
      - "ldaps://ldap4.ncsa.illinois.edu"
    ldap_group_member: "uniqueMember"
    ldap_group_search_base: "ou=groups,dc=ncsa,dc=illinois,dc=edu"
    ldap_schema: "rfc2307bis"
    ldap_search_base: "dc=ncsa,dc=illinois,dc=edu"
    ldap_tls_cacert: "/etc/pki/tls/certs/ca-bundle.crt"
    ldap_tls_reqcert: "demand"
    ldap_uri:
      - "ldaps://ldap1.ncsa.illinois.edu"
      - "ldaps://ldap2.ncsa.illinois.edu"
    ldap_user_email: "login_via_email_address_is_disabled"
    ldap_user_search_base: "ou=people,dc=ncsa,dc=illinois,dc=edu"
    selinux_provider: "none"
    # LEAVE simple_allow_groups BLANK - ncsa/sshd MODULE DYNAMICALLY ADDS GROUPS
    #simple_allow_groups:
    simple_deny_groups:
      - "all_disabled_usr"
sssd::services:
  nss:
    override_homedir: "/home/%u"
    shell_fallback: "/bin/bash"
    allowed_shells:
      - "/usr/ncsa/bin/tcsh"
      - "/usr/ncsa/bin/bash"
      - "/usr/ncsa/bin/zsh"
      - "/bin/csh"
      - "/bin/tcsh"
      - "/bin/zsh"
    vetoed_shells:
      - "/usr/ncsa/bin/tcsh"
      - "/usr/ncsa/bin/bash"
      - "/usr/ncsa/bin/zsh"
      - "/bin/csh"
    filter_groups:
      - "adm"
      - "apache"
      - "asmadmin"
      - "asmdba"
      - "asmoper"
      - "audio"
      - "avahi"
      - "avahi-autoipd"
      - "backupdba"
      - "bin"
      - "cdrom"
      - "cgred"
      - "chronograf"
      - "chrony"
      - "condor"
      - "conserver"
      - "daemon"
      - "dba"
      - "dbus"
      - "dgdba"
      - "dhcpd"
      - "dialout"
      - "dip"
      - "disk"
      - "docker"
      - "elasticsearch"
      - "floppy"
      - "ftp"
      - "games"
      - "geoclue"
      - "git"
      - "gitlab-prometheus"
      - "gitlab-psql"
      - "gitlab-redis"
      - "gitlab-www"
      - "grafana"
      - "graylog"
      - "graylog-web"
      - "hsqldb"
      - "influxdb"
      - "input"
      - "kmdba"
      - "kmem"
      - "ldap"
      - "levelone"
      - "lock"
      - "lp"
      - "mail"
      - "man"
      - "mem"
      - "mongod"
      - "munge"
      - "myproxy"
      - "myproxyoauth"
      - "mysql"
      - "nagios"
      - "named"
      - "nfsnobody"
      - "nobody"
      - "nrpe"
      - "nscd"
      - "ntp"
      - "oinstall"
      - "oper"
      - "oprofile"
      - "pdagent"
      - "polkitd"
      - "postdrop"
      - "postfix"
      - "postgres"
      - "puppet"
      - "puppetdb"
      - "qserv"
      - "qualys"
      - "rabbitmq"
      - "racdba"
      - "redis"
      - "root"
      - "rpc"
      - "rpcuser"
      - "saslauth"
      - "screen"
      - "sfcb"
      - "simpleca"
      - "slocate"
      - "slurm"
      - "sshd"
      - "ssh_keys"
      - "sssd"
      - "stapdev"
      - "stapsys"
      - "stapusr"
      - "suiadmin"
      - "SupportAssistAdmins"
      - "SupportAssistUsers"
      - "sys"
      - "systemd-bus-proxy"
      - "systemd-journal"
      - "systemd-network"
      - "tape"
      - "tcpdump"
      - "telegraf"
      - "tss"
      - "tty"
      - "unbound"
      - "users"
      - "utempter"
      - "utmp"
      - "video"
      - "wheel"
      - "xdmod"
    filter_users:
      - "activemq"
      - "adm"
      - "apache"
      - "avahi"
      - "avahi-autoipd"
      - "bin"
      - "chronograf"
      - "chrony"
      - "condor"
      - "conserver"
      - "daemon"
      - "dbus"
      - "docker"
      - "elasticsearch"
      - "ftp"
      - "games"
      - "geoclue"
      - "grafana"
      - "graylog"
      - "graylog-web"
      - "grid"
      - "halt"
      - "hsqldb"
      - "influxdb"
      - "ldap"
      - "lp"
      - "mail"
      - "mongod"
      - "munge"
      - "myproxy"
      - "myproxyoauth"
      - "mysql"
      - "nagios"
      - "nfsnobody"
      - "nobody"
      - "nrpe"
      - "nscd"
      - "nslcd"
      - "ntp"
      - "operator"
      - "oprofile"
      - "oracle"
      - "pdagent"
      - "polkitd"
      - "postfix"
      - "postgres"
      - "puppet"
      - "puppetdb"
      - "rabbitmq"
      - "redis"
      - "rsbackup"
      - "qserv"
      - "qualys"
      - "root"
      - "rpc"
      - "rpcuser"
      - "saslauth"
      - "shutdown"
      - "simpleca"
      - "slurm"
      - "sshd"
      - "sssd"
      - "suiadmin"
      - "sync"
      - "systemd-bus-proxy"
      - "systemd-network"
      - "tcpdump"
      - "telegraf"
      - "tomcat"
      - "tss"
      - "unbound"
      - "wireshark"
      - "xdmod"
  pam: {}

telegraf::agent:
  flush_interval: "10s"
  metric_buffer_limit: "100000"
telegraf::config_file_mode: "0640"
telegraf::config_folder_mode: "0750"
telegraf::flush_jitter: "10s"
telegraf::hostname: "%{::fqdn}"
telegraf::inputs:
  cpu:
    percpu: false
    totalcpu: true
  disk:
    ignore_fs:
      - "afs"
      - "devfs"
      - "devtmpfs"
      - "gpfs"
      - "lustre"
      - "nfs"
      - "nfs4"
      - "nsfs"
      - "tmpfs"
      - "tracefs"
  diskio:
    devices:
      - "sd*"
      - "vd*"
  mem: [{}]
  net:
    interfaces:
      - "e*"
      - "bond*"
  processes: [{}]
  puppetagent:
    location: "/opt/puppetlabs/puppet/public/last_run_summary.yaml"
  swap: [{}]
  system: [{}]
  systemd_units:
    unittype: "service"
telegraf::interval: "60s"
telegraf::manage_repo: true
telegraf::outputs: {}

# DO NOT ALLOW puppet-yum TO APPLY updateonly_limit.
# REASON #1
# - CONFLICT BETWEEN profile_update_os AND puppet-yum
# - https://github.com/ncsa/puppet-profile_update_os/issues/3
# REASON #2
# - puppet-yum "cleanup_oldkernels" IS BROKEN ON RHEL8
# - https://github.com/voxpupuli/puppet-yum/issues/220
yum::clean_old_kernels: false
# REMOVE THE NEXT LINE ALSO AFTER REASON #1 IS RESOLVED.
yum::config_options:
  installonly_limit: 2
